#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Sources

## Source Prezto.
source "$ZDOTDIR/prezto/init.zsh"

## Source .profile.
[[ -s "$HOME/.profile" ]] && source "$HOME/.profile"

# Aliases

## Project shortcuts.
alias p='cd ~/Projects'
alias pm='cd ~/Projects/MBox'

## Show hidden files in Finder.app.
alias fshow='defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder'
alias fhide='defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder'

## Enable/Disable V2Ray
alias v2on='launchctl load ~/Library/LaunchAgents/org.v2ray.plist'
alias v2off='launchctl unload ~/Library/LaunchAgents/org.v2ray.plist'
alias v2rld='v2off && v2on'
alias v2edit='subl ~/.config/v2ray/config.json'

## Git shortcuts.
alias gbvv="git branch -vv"
alias gcAm='git add . && git commit --message'
alias gC='git checkout'
alias gCf='git checkout -f'
alias gS='git status'
alias gsu='git stash -u'
alias gsA='git stash -a'
alias gD='git diff'
alias gmc='git merge --continue'
alias gpu='git push -u'
alias gP="git pull"
alias gwa="git worktree add"
alias gwx="git worktree remove"
alias gwl="git worktree list"
alias gwm="git worktree move"
alias gwp="git worktree prune"
alias gdangling="git fsck --no-reflog | awk '/dangling commit/ {print $3}' | xargs -n1 git log -p -1 | cat"

## MBox shortcuts.
alias m0='cd ~/Projects/MBox'
alias m1='cd ~/Projects/MBox1'
alias m2='cd ~/Projects/MBox2'
alias m3='cd ~/Projects/MBox3'
alias m4='cd ~/Projects/MBox4'
alias m0S='mS ~/Projects/MBox'
alias m1S='mS ~/Projects/MBox1'
alias m2S='mS ~/Projects/MBox2'
alias m3S='mS ~/Projects/MBox3'
alias m4S='mS ~/Projects/MBox4'
alias mSA='mA ~/Projects/MBox ~/Projects/MBox1 ~/Projects/MBox2 ~/Projects/MBox3 ~/Projects/MBox4 status'
alias mUA='mA ~/Projects/MBox ~/Projects/MBox1 ~/Projects/MBox2 ~/Projects/MBox3 ~/Projects/MBox4 update'
alias mpi='mbox pod install; ring'
alias mpio='mbox pod install && mbox go; ring'
alias mpid="mbox pod install && mbox aweme debug --udid=$MBOX_DEBUG_DEVICE_UDID; ring"
alias mpido="mbox pod install && mbox aweme debug --udid=$MBOX_DEBUG_DEVICE_UDID && mbox go; ring"
alias mpu='mbox pod update'
alias mbx='mbox remove'
alias mbxr='mbox remove --include-repo'
alias mbX='mbox remove --force'
alias mbXr='mbox remove --force --include-repo'
alias mbm='mbox merge'
alias mff='mbox git add . && mbox feature free --no-install'
alias mfs='mbox git add . && mbox feature start --no-install'
alias mos='mbox git add . && mbox feature start --prefix=optimize --no-install'
alias mbs='mbox git add . && mbox feature start --prefix=bugfix --no-install'
alias mfr='mbox feature rename'
alias mfx='mbox feature remove --include-repo'
alias mfm='mbox feature merge'
alias mfl='mbox feature list'
alias mdd="mbox aweme debug --udid=$MBOX_DEBUG_DEVICE_UDID"
alias mud='mbox aweme debug --undo'
alias mgC='mbox git checkout'
alias mgCf='mbox git checkout -f'
alias mgbc='mbox git checkout -b'
alias mgcm='mbox git commit -m'
alias mgcam='mbox git commit -a -m'
alias mgm='mbox git merge'
alias mgS='mbox git status'
alias mgp='mbox git push'
alias mgP='mbox git pull'
alias mgpf='mbox git push --force-with-lease'
alias mgupdate='mbox git fetch origin develop:develop && mbox git checkout origin/develop'
alias mopen='mbox go'
alias mfork='mbox fork --all'

## Java shortcuts.
alias jhu='unset JAVA_HOME'
alias jh8='export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)'
alias jh12='export JAVA_HOME=$(/usr/libexec/java_home -v 12)'

## Misc shortcuts.
alias lg='la | grep'
alias pg='ps aux | grep'
alias py='python'
alias py3='python3'
alias spm='swift package'
alias ydl='youtube-dl'
alias sml='streamlink'
alias sha256='shasum -a 256'
alias ring='afplay /System/Library/Sounds/Ping.aiff -v 2'
alias brewU='brew update && brew upgrade'

# Functions

## Enable/Disable proxy
function proxyon() {
  local host_port='127.0.0.1:8080'

  export all_proxy="socks5://127.0.0.1:1080"
  export http_proxy="http://$host_port"
  export https_proxy="https://$host_port"
  git config --global http.proxy $host_port
  git config --global https.proxy $host_port
  echo "proxy = \"$all_proxy\"" >! $HOME/.config/curl/config
}

function proxyoff() {
  export http_proxy=''
  export https_proxy=''
  git config --global http.proxy ''
  git config --global https.proxy ''
  echo '' >! $HOME/.config/curl/config
}

## Open $(pwd)/$@ in Finder.app.
function opend() {
  if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

## Reload shell.
function reload() {
  local compdump_files="$ZDOTDIR/.zcompdump*"

  if ls $compdump_files &> /dev/null; then
    rm -f $compdump_files
  fi

  exec $SHELL -l
}

## File size calculator.
function filesize() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

## Open man page with Dash app.
function dman() {
  open "dash://man:$@"
}

## Open man page in a easy-to-read, standalone window.
function xman() {
  open "x-man-page://$@"
}

## Move file to directory without retyping the name.
function mv2d() {
  echo mv "$1" "$2/${1##*/}_$3"
}

## Encode/Decode string using base64.
function b64e() {
  echo "$@" | base64
}

function b64d() {
  echo "$@" | base64 -D
}

## Find current IP address.
function myip() {
  dig +short myip.opendns.com @resolver1.opendns.com
}

## Generate a secure password.
function passgen() {
  LC_ALL=C tr -dc ${1:-"[:graph:]"} < /dev/urandom | head -c ${2:-20}
}

## Flush DNS caches.
function flushdns() {
  sudo dscacheutil -flushcache && \
  sudo killall -HUP mDNSResponder
}

## Create application icon file from an 1024px master file.
function mkicns() {
  if [[ -z "$@" ]]; then
    echo "Input file missing"
  else
    filename=${1%.*}
    mkdir $filename.iconset
    sips -z 16 16   $1 --out $filename.iconset/icon_16x16.png
    sips -z 32 32   $1 --out $filename.iconset/icon_16x16@2x.png
    sips -z 32 32   $1 --out $filename.iconset/icon_32x32.png
    sips -z 64 64   $1 --out $filename.iconset/icon_32x32@2x.png
    sips -z 128 128 $1 --out $filename.iconset/icon_128x128.png
    sips -z 256 256 $1 --out $filename.iconset/icon_128x128@2x.png
    sips -z 256 256 $1 --out $filename.iconset/icon_256x256.png
    sips -z 512 512 $1 --out $filename.iconset/icon_256x256@2x.png
    sips -z 512 512 $1 --out $filename.iconset/icon_512x512.png
    cp $1 $filename.iconset/icon_512x512@2x.png
    iconutil -c icns $filename.iconset
    rm -r $filename.iconset
  fi
}

## Symbolicate crash
function symcrash() {
  export DEVELOPER_DIR=$(xcode-select --print-path)
  /Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash "$@"
}

## MBox add multiple repos at once
function mba() {
  for repo in $@ 
  do
    mbox add $repo
  done
}

## MBox add multiple repos at once as worktree
function mbaw() {
  local tree=${@: -1}

  for repo in ${@[@]:1:-1}
  do
    mbox add $repo --mode='worktree' $tree
  done
}

## MBox execute with alias
function ma() {
  local cmd=$(_alias_for $1)
  local args=${@[@]:2}

  if [[ -z $cmd ]]; then
    echo "Could not find alias for $1"
  else
    echo "\033[32mCommand: \033[0;96mmbox $cmd\033[0m"
    eval "mbox $cmd $args"
  fi
}

function mA() {
  if [[ -z $2 ]]; then
    mbox $1
  else
    local pwd=$PWD
    local cmd=${@: -1}

    for repo in ${@[@]:1:-1}
    do
      echo "\n\033[0;96m[in $repo]\033[0m"
      cd $repo && mbox $cmd
    done

    cd $pwd
  fi
}

function mS() {
  mA $@ status
}

